<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="edu.hebeu.mapper.EmployeeMapper" >
  <resultMap id="BaseResultMap" type="edu.hebeu.entity.Employee" >
    <id column="id" property="id" jdbcType="INTEGER" />
    <result column="employee_number" property="employeeNumber" jdbcType="INTEGER" />
    <result column="name" property="name" jdbcType="VARCHAR" />
    <result column="gender" property="gender" jdbcType="CHAR" />
    <result column="birthday" property="birthday" jdbcType="DATE" />
    <result column="telephone" property="telephone" jdbcType="VARCHAR" />
    <result column="email" property="email" jdbcType="VARCHAR" />
    <result column="address" property="address" jdbcType="VARCHAR" />
    <result column="photo" property="photo" jdbcType="VARCHAR" />
    <result column="education" property="education" jdbcType="VARCHAR" />
    <result column="department_number" property="departmentNumber" jdbcType="INTEGER" />
    <result column="department_name" property="departmentName" jdbcType="VARCHAR" />
    <result column="position_number" property="positionNumber" jdbcType="INTEGER" />
    <result column="position_name" property="positionName" jdbcType="VARCHAR" />
    <result column="in_time" property="inTime" jdbcType="DATE" />
    <result column="password" property="password" jdbcType="VARCHAR" />
    <result column="notes" property="notes" jdbcType="VARCHAR" />
    <result column="idcard" property="idcard" jdbcType="INTEGER" />
  </resultMap>
  <sql id="Base_Column_List" >
    id, employee_number, name, gender, birthday, telephone, email, address, photo, education, 
    department_number,  position_number,  in_time, password,
    notes, idcard
  </sql>
  <select id="checkLogin" resultMap="BaseResultMap" parameterType="edu.hebeu.entity.Employee" >
    select employee.*,position.name AS position_name
    from employee
    INNER JOIN position on employee.position_number = position.position_number
    where employee_number = #{employeeNumber,jdbcType=INTEGER} AND password = #{password,jdbcType=VARCHAR}
  </select>
  <select id="selectAll" resultMap="BaseResultMap" >
    SELECT employee.*,position.name AS position_name,department.name AS department_name FROM employee
    INNER JOIN position on employee.position_number = position.position_number
    INNER JOIN department ON employee.department_number = department.department_number
  </select>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select employee.*,position.name AS position_name,department.name AS department_name
    from employee
    INNER JOIN position on employee.position_number = position.position_number
    INNER JOIN department ON employee.department_number = department.department_number
    where employee.id = #{id,jdbcType=INTEGER}
  </select>
  <select id="selectByEmployeeNumber" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
      select employee.*,position.name AS position_name,department.name AS department_name
      from employee
      INNER JOIN position on employee.position_number = position.position_number
      INNER JOIN department ON employee.department_number = department.department_number
      where employee_number = #{employeeNumber,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from employee
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="edu.hebeu.entity.Employee" >
    insert into employee (id, employee_number, name, 
      gender, birthday, telephone, 
      email, address, photo, 
      education, department_number, position_number, in_time,
      password, notes, idcard
      )
    values (#{id,jdbcType=INTEGER}, #{employeeNumber,jdbcType=INTEGER}, #{name,jdbcType=VARCHAR}, 
      #{gender,jdbcType=CHAR}, #{birthday,jdbcType=DATE}, #{telephone,jdbcType=VARCHAR}, 
      #{email,jdbcType=VARCHAR}, #{address,jdbcType=VARCHAR}, #{photo,jdbcType=VARCHAR}, 
      #{education,jdbcType=VARCHAR}, #{departmentNumber,jdbcType=INTEGER},
      #{positionNumber,jdbcType=INTEGER}, #{inTime,jdbcType=DATE},
      #{password,jdbcType=VARCHAR}, #{notes,jdbcType=VARCHAR}, #{idcard,jdbcType=INTEGER}
      )
  </insert>
  <insert id="insertSelective" parameterType="edu.hebeu.entity.Employee" >
    insert into employee
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        id,
      </if>
      <if test="employeeNumber != null" >
        employee_number,
      </if>
      <if test="name != null" >
        name,
      </if>
      <if test="gender != null" >
        gender,
      </if>
      <if test="birthday != null" >
        birthday,
      </if>
      <if test="telephone != null" >
        telephone,
      </if>
      <if test="email != null" >
        email,
      </if>
      <if test="address != null" >
        address,
      </if>
      <if test="photo != null" >
        photo,
      </if>
      <if test="education != null" >
        education,
      </if>
      <if test="departmentNumber != null" >
        department_number,
      </if>
      <if test="positionNumber != null" >
        position_number,
      </if>
      <if test="inTime != null" >
        in_time,
      </if>
      <if test="password != null" >
        password,
      </if>
      <if test="notes != null" >
        notes,
      </if>
      <if test="idcard != null" >
        idcard,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=INTEGER},
      </if>
      <if test="employeeNumber != null" >
        #{employeeNumber,jdbcType=INTEGER},
      </if>
      <if test="name != null" >
        #{name,jdbcType=VARCHAR},
      </if>
      <if test="gender != null" >
        #{gender,jdbcType=CHAR},
      </if>
      <if test="birthday != null" >
        #{birthday,jdbcType=DATE},
      </if>
      <if test="telephone != null" >
        #{telephone,jdbcType=VARCHAR},
      </if>
      <if test="email != null" >
        #{email,jdbcType=VARCHAR},
      </if>
      <if test="address != null" >
        #{address,jdbcType=VARCHAR},
      </if>
      <if test="photo != null" >
        #{photo,jdbcType=VARCHAR},
      </if>
      <if test="education != null" >
        #{education,jdbcType=VARCHAR},
      </if>
      <if test="departmentNumber != null" >
        #{departmentNumber,jdbcType=INTEGER},
      </if>
      <if test="positionNumber != null" >
        #{positionNumber,jdbcType=INTEGER},
      </if>
      <if test="inTime != null" >
        #{inTime,jdbcType=DATE},
      </if>
      <if test="password != null" >
        #{password,jdbcType=VARCHAR},
      </if>
      <if test="notes != null" >
        #{notes,jdbcType=VARCHAR},
      </if>
      <if test="idcard != null" >
        #{idcard,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="edu.hebeu.entity.Employee" >
    update employee
    <set >
      <if test="employeeNumber != null" >
        employee_number = #{employeeNumber,jdbcType=INTEGER},
      </if>
      <if test="name != null" >
        name = #{name,jdbcType=VARCHAR},
      </if>
      <if test="gender != null" >
        gender = #{gender,jdbcType=CHAR},
      </if>
      <if test="birthday != null" >
        birthday = #{birthday,jdbcType=DATE},
      </if>
      <if test="telephone != null" >
        telephone = #{telephone,jdbcType=VARCHAR},
      </if>
      <if test="email != null" >
        email = #{email,jdbcType=VARCHAR},
      </if>
      <if test="address != null" >
        address = #{address,jdbcType=VARCHAR},
      </if>
      <if test="photo != null" >
        photo = #{photo,jdbcType=VARCHAR},
      </if>
      <if test="education != null" >
        education = #{education,jdbcType=VARCHAR},
      </if>
      <if test="departmentNumber != null" >
        department_number = #{departmentNumber,jdbcType=INTEGER},
      </if>
      <if test="positionNumber != null" >
        position_number = #{positionNumber,jdbcType=INTEGER},
      </if>
      <if test="inTime != null" >
        in_time = #{inTime,jdbcType=DATE},
      </if>
      <if test="password != null" >
        password = #{password,jdbcType=VARCHAR},
      </if>
      <if test="notes != null" >
        notes = #{notes,jdbcType=VARCHAR},
      </if>
      <if test="idcard != null" >
        idcard = #{idcard,jdbcType=INTEGER},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="edu.hebeu.entity.Employee" >
    update employee
    set employee_number = #{employeeNumber,jdbcType=INTEGER},
      name = #{name,jdbcType=VARCHAR},
      gender = #{gender,jdbcType=CHAR},
      birthday = #{birthday,jdbcType=DATE},
      telephone = #{telephone,jdbcType=VARCHAR},
      email = #{email,jdbcType=VARCHAR},
      address = #{address,jdbcType=VARCHAR},
      photo = #{photo,jdbcType=VARCHAR},
      education = #{education,jdbcType=VARCHAR},
      department_number = #{departmentNumber,jdbcType=INTEGER},
      position_number = #{positionNumber,jdbcType=INTEGER},
      in_time = #{inTime,jdbcType=DATE},
      password = #{password,jdbcType=VARCHAR},
      notes = #{notes,jdbcType=VARCHAR},
      idcard = #{idcard,jdbcType=INTEGER}
    where id = #{id,jdbcType=INTEGER}
  </update>
</mapper>