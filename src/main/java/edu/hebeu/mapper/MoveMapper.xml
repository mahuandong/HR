<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="edu.hebeu.mapper.MoveMapper" >
  <resultMap id="BaseResultMap" type="edu.hebeu.entity.Move" >
    <id column="id" property="id" jdbcType="INTEGER" />
    <result column="employee_number" property="employeeNumber" jdbcType="INTEGER" />
    <result column="name" property="name" jdbcType="VARCHAR" />
    <result column="before" property="before" jdbcType="INTEGER" />
    <result column="after" property="after" jdbcType="INTEGER" />
    <result column="time" property="time" jdbcType="TIMESTAMP" />
    <result column="manager" property="manager" jdbcType="VARCHAR" />
    <result column="notes" property="notes" jdbcType="VARCHAR" />
  </resultMap>
  <sql id="Base_Column_List" >
    id, employee_number, before, after, time, manager, notes
  </sql>
  <select id="selectAll" resultMap="BaseResultMap" >
  SELECT move.*,employee.name AS `name`,b.name as beforeName,a.name as afterName
  FROM move
  JOIN employee on move.employee_number = employee.employee_number
  JOIN department b ON move.before = b.department_number
  LEFT JOIN department a ON move.after = a.department_number
  </select>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    from move
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from move
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="edu.hebeu.entity.Move" >
    insert into move (id, employee_number, before, 
      after, time, manager, 
      notes)
    values (#{id,jdbcType=INTEGER}, #{employeeNumber,jdbcType=INTEGER}, #{before,jdbcType=INTEGER}, 
      #{after,jdbcType=INTEGER}, #{time,jdbcType=TIMESTAMP}, #{manager,jdbcType=VARCHAR}, 
      #{notes,jdbcType=VARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="edu.hebeu.entity.Move" >
    insert into move
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        id,
      </if>
      <if test="employeeNumber != null" >
        employee_number,
      </if>
      <if test="before != null" >
        before,
      </if>
      <if test="after != null" >
        after,
      </if>
      <if test="time != null" >
        time,
      </if>
      <if test="manager != null" >
        manager,
      </if>
      <if test="notes != null" >
        notes,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=INTEGER},
      </if>
      <if test="employeeNumber != null" >
        #{employeeNumber,jdbcType=INTEGER},
      </if>
      <if test="before != null" >
        #{before,jdbcType=INTEGER},
      </if>
      <if test="after != null" >
        #{after,jdbcType=INTEGER},
      </if>
      <if test="time != null" >
        #{time,jdbcType=TIMESTAMP},
      </if>
      <if test="manager != null" >
        #{manager,jdbcType=VARCHAR},
      </if>
      <if test="notes != null" >
        #{notes,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="edu.hebeu.entity.Move" >
    update move
    <set >
      <if test="employeeNumber != null" >
        employee_number = #{employeeNumber,jdbcType=INTEGER},
      </if>
      <if test="before != null" >
        before = #{before,jdbcType=INTEGER},
      </if>
      <if test="after != null" >
        after = #{after,jdbcType=INTEGER},
      </if>
      <if test="time != null" >
        time = #{time,jdbcType=TIMESTAMP},
      </if>
      <if test="manager != null" >
        manager = #{manager,jdbcType=VARCHAR},
      </if>
      <if test="notes != null" >
        notes = #{notes,jdbcType=VARCHAR},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="edu.hebeu.entity.Move" >
    update move
    set employee_number = #{employeeNumber,jdbcType=INTEGER},
      before = #{before,jdbcType=INTEGER},
      after = #{after,jdbcType=INTEGER},
      time = #{time,jdbcType=TIMESTAMP},
      manager = #{manager,jdbcType=VARCHAR},
      notes = #{notes,jdbcType=VARCHAR}
    where id = #{id,jdbcType=INTEGER}
  </update>
</mapper>